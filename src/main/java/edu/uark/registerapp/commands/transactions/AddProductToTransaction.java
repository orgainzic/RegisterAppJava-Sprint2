package edu.uark.registerapp.commands.transactions;

import edu.uark.registerapp.commands.ResultCommandInterface;
import edu.uark.registerapp.commands.exceptions.UnprocessableEntityException;
import edu.uark.registerapp.models.api.TransactionEntry;
import edu.uark.registerapp.models.entities.TransactionEntryEntity;
import edu.uark.registerapp.models.repositories.TransactionEntryRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.UUID;

@Service
public class AddProductToTransaction implements ResultCommandInterface<TransactionEntry> {
    @Override
    public TransactionEntry execute() {
        // TODO: this.validateProperties();

        // Create a new ENTITY object from the API object details
        final TransactionEntryEntity transactionEntryEntity =
                this.transactionEntryRepository.save(new TransactionEntryEntity(
                        this.transactionId,
                        this.productID,
                        1,
                        this.price
                ));

        // Synchronize information generated by the database upon INSERT
        this.apiTransactionEntry = new TransactionEntry(transactionEntryEntity);

        return this.apiTransactionEntry;
    }

    // Helper Methods
    private void validateProperties() {
        if (this.transactionId.equals(null)) {
            throw new UnprocessableEntityException("transactionId");
        }

        if (this.productID.equals(null)) {
            throw new UnprocessableEntityException("productId");
        }
    }

    // Properties
    private UUID transactionId;
    public UUID getTransactionId() { return this.transactionId; }
    public AddProductToTransaction setTransactionId(final UUID transactionId) {
        this.transactionId = transactionId;
        return this;
    }

    private UUID productID;
    public UUID getProductID() { return this.productID; }
    public AddProductToTransaction setProductId(final UUID productId) {
        this.productID = productId;
        return this;
    }

    private long price;
    public long getPrice() { return this.price; }
    public AddProductToTransaction setPrice(final long price) {
        this.price = price;
        return this;
    }

    private TransactionEntry apiTransactionEntry;
    public TransactionEntry getApiTransactionEntry() { return this.apiTransactionEntry; }
    public AddProductToTransaction setApiTransactionEntry(final TransactionEntry apiTransaction) {
        this.apiTransactionEntry = apiTransaction;
        return this;
    }

    @Autowired
    private TransactionEntryRepository transactionEntryRepository;
}